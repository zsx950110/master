package person.spring.test;import net.sf.cglib.proxy.Enhancer;import net.sf.cglib.proxy.MethodInterceptor;import net.sf.cglib.proxy.MethodProxy;import java.lang.reflect.Method;public class CglibDemo {   public static void main(String[] args) throws ClassNotFoundException {        //enhancer实例       Enhancer enhancer = new Enhancer();        //设置父类        enhancer.setSuperclass(CglibDemo.class);//目标类是谁，谁就是父类        enhancer.setCallback(new  MethodInterceptorImpl()); //设置回调对象        CglibDemo cglibDemo = (CglibDemo) enhancer.create();//创建代理类        cglibDemo.test();//调用目标方法        System.out.println(cglibDemo); //cglibDemo$$EnhancerByCGLIB$$16b17c23@6c3708b3    }    public  static  void test(){        System.out.println("==========执行test方法===========");    }    private static class MethodInterceptorImpl implements MethodInterceptor {        @Override        public Object intercept(Object o, Method method, Object[] objects, MethodProxy methodProxy) throws Throwable {            System.out.println("========before==cglib========");            //调用父类方法            Object re = methodProxy.invokeSuper(o,objects);            System.out.println("=========after==cglib====================");            return re;        }    }} 