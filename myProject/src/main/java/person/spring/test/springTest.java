package person.spring.test;import com.sun.xml.internal.ws.policy.privateutil.PolicyUtils;import org.aspectj.weaver.ast.Test;import org.springframework.beans.factory.BeanFactory;import org.springframework.beans.factory.xml.XmlBeanFactory;import org.springframework.cglib.core.Local;import org.springframework.context.ApplicationContext;import org.springframework.context.support.ApplicationObjectSupport;import org.springframework.context.support.ClassPathXmlApplicationContext;import org.springframework.core.convert.support.DefaultConversionService;import org.springframework.core.io.ClassPathResource;import org.springframework.jdbc.core.JdbcTemplate;import org.springframework.web.context.ContextLoader;import person.pojo.TestUser;import person.spring.test.jdbcTest.UserService;import person.spring.test.jdbcTest.UserService1;import person.spring.test.jdbcTest.UserServiceImpl;import java.lang.reflect.InvocationHandler;import java.sql.SQLException;import java.time.LocalDate;import java.util.*;public class springTest {    public static void main(String[] args) throws ClassNotFoundException, SQLException {   /* IOperation iOperation = new IOperationImpl();        MyInvacationHandler invocationHandler = new MyInvacationHandler(iOperation);        iOperation = (IOperation) invocationHandler.getProxy(iOperation);        iOperation.print("111111");*/       ApplicationContext applicationContext = new ClassPathXmlApplicationContext("test.xml");       UserServiceImpl userService = (UserServiceImpl) applicationContext.getBean("userServiceImpl1");        TestUser testUser= new TestUser();        testUser.setId("111");     //   testUser.setName("zsxxsss");        TestUser testUser1= new TestUser();        testUser1.setId("22");     //   testUser1.setName("zsxxsss");      //userService.save1(testUser);       userService.save(testUser1);       for (String arg : applicationContext.getBeanDefinitionNames()) {            System.out.println("============="+arg);        };      /*  springListener listener = applicationContext.getBean(springListener.class);        System.out.println("第一次加载完毕===============================");        System.out.println(listener);*/    }}