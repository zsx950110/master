<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:mvc="http://www.springframework.org/schema/mvc"
	   xmlns:tx="http://www.springframework.org/schema/tx"
	   xmlns:contenxt="http://www.springframework.org/schema/context"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:aop="http://www.springframework.org/schema/aop"
	   xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
         http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd
   		http://www.springframework.org/schema/aop
    	http://www.springframework.org/schema/aop/spring-aop.xsd ">
<!--加密解密-->
<bean id="propertyConfigurer" class="person.util.ConvertData">
<!--		  class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">-->
		<property name="ignoreUnresolvablePlaceholders" value="true" />
		<property name="location" value="classpath:dbConfig.properties"/>
</bean>
	<!-- 创建dbcp连接池 -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="url" value="${url}" />
		<property name="username" value="${username}"/>
		<property name="password" value="${password}"/>
		<property name="driverClassName" value="${driverClassName}"/>
		<property name="initialSize" value="1" />
		<property name="maxActive" value="5" />
		<property name="maxIdle" value="1" />
		<property name="maxWait" value="10000" />
		<!--空闲连接的释放时间，超过这个时间将被释放-->
		<property name="minEvictableIdleTimeMillis" value="10000" />
		<!--5秒检查一次连接池的空闲连接是否有超时-->
		<property name="timeBetweenEvictionRunsMillis" value="5000" />
		<!-- 验证使用的SQL语句-->
		<property name="validationQuery" value="SELECT 1 from dual" />
	</bean>
	<!--JNDI配置-->
	<!--<bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
	<property name="jndiName" value="jdbc/oracle"/>
	</bean>-->
	<!--注意：这里的value值就是在server.xml或者context.xml中配置的name值一样。-->
	<!--<bean id="Operations" class="person.service.Operations"/>-->
	<!-- Spring整合Hibernate -->
	<bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<!--		<property-->
		<!--				name="configLocation" value="classpath:hibernate.cfg.xml" />-->
		<property name="hibernateProperties">
			<props>
				<!-- 是否输出sql语句 -->
				<prop key="hibernate.show_sql">false</prop>
				<prop key="hibernate.dialect">org.hibernate.dialect.Oracle10gDialect</prop>
				<!--	<prop key="hibernate.current_session_context_class">thread</prop>-->
			</props>

		</property>
		<property name="dataSource" ref="dataSource"/>
		<!--		<property name="annotatedataSourcedClasses">-->
		<!--			<list>-->
		<!--				<value>person.service.Operations</value>-->
		<!--			</list>-->
		<!--		</property>-->
		<property name="mappingLocations">
			<list>
				<value>classpath:xml/*.hbm.xml</value>

			</list>
		</property>

	</bean>


	<bean id="txManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory"/>
	</bean>

	<tx:annotation-driven transaction-manager="txManager"    proxy-target-class="true"/>
	<!-- 开启Spring注解扫描 -->
	<contenxt:component-scan base-package="person.*"/>


</beans>
